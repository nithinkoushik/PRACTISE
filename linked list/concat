#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node* next;
};
struct node* head1=NULL;
struct node* head2=NULL;
void concat();
void insert1();
void insert2();
void result();
void main()
{
    int choice;
    while(1)
    {
        printf("1.INSERT INTO LIST 1\n2.INSERT INTO LIST 2\n3.CONCAT\n4.RESULT");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1:insert1();
                   break;
            case 2:insert2();
                   break;
            case 3:concat();
                   break;
            case 4:result();
                   break;
            default:printf("enter correct choice");
                    break;
        }
    }
}
void insert1()
{
    int val;
    printf("enter value");
    scanf("%d",&val);
    struct node* ptr=(struct node*)malloc(sizeof(struct node));
    if(ptr==NULL)
    {
        printf("MEMORY FULL");
    }
    else
    {
       ptr->data=val;
       if(head1==NULL)
       {
           head1=ptr;
           ptr->next=NULL;
       }
       else
       {
          ptr->next=head1;
          head1=ptr;
       }
    }
}
void insert2()
{
      int val;
    printf("enter value");
    scanf("%d",&val);
    struct node* ptr1=(struct node*)malloc(sizeof(struct node));
    if(ptr1==NULL)
    {
        printf("MEMORY FULL");
    }
    else
    {
       ptr1->data=val;
       if(head2==NULL)
       {
           head2=ptr1;
           ptr1->next=NULL;
       }
       else
       {
          ptr1->next=head2;
          head2=ptr1;
       }
    }
}
void concat()
{
    struct node* ptr=head1;
    while(ptr->next!=NULL)
    {
        ptr=ptr->next;
    }
    ptr->next=head2;
}
void result()
{
    struct node* current;
    current=head1;
    if(current==NULL)
    {
        printf("LIST IS EMPTY");
    }
    while(current!=NULL)
    {
        printf("%d",current->data);
        current=current->next;
    }
}
